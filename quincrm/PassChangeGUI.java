/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package quincrm;

import java.awt.Color;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;

/**
 *
 * @author cuong
 */
public class PassChangeGUI extends javax.swing.JFrame {

    //class
    CurrentUser currentuser = new CurrentUser();

    /**
     * Creates new form PassChangeGUI
     */
    public PassChangeGUI() {
        initComponents();
        //set names
        String username = currentuser.getUsername();
        userDatQuery = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT u FROM UserDat u WHERE u.usernick = '" + username + "'");
        refreshList();

        jUserTable.setRowSelectionInterval(0, 0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        entityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("jdbc:derby:QuinDatabase;create=truePU").createEntityManager();
        userDatQuery = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT u FROM UserDat u");
        userDatList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : userDatQuery.getResultList();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        oldPassLBL = new javax.swing.JLabel();
        changePassBTN = new javax.swing.JButton();
        cancelBTN = new javax.swing.JButton();
        newPassLBL = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        renewPassLBL = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        jUserTable = new javax.swing.JTable();
        newPassTXT = new javax.swing.JPasswordField();
        renewPassTXT = new javax.swing.JPasswordField();
        oldPassTXT = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));

        jLabel3.setFont(new java.awt.Font("Century Gothic", 0, 22)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(204, 204, 204));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Management");
        jLabel3.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jSeparator3.setBackground(new java.awt.Color(255, 255, 255));

        jSeparator4.setBackground(new java.awt.Color(255, 255, 255));

        jLabel4.setFont(new java.awt.Font("Century Gothic", 0, 30)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(204, 204, 204));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Password");
        jLabel4.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(118, 118, 118))
        );

        jPanel2.setBackground(new java.awt.Color(102, 102, 102));
        jPanel2.setPreferredSize(new java.awt.Dimension(480, 450));

        jSeparator1.setBackground(new java.awt.Color(255, 255, 255));
        jSeparator1.setVerifyInputWhenFocusTarget(false);

        oldPassLBL.setForeground(new java.awt.Color(153, 153, 153));
        oldPassLBL.setText("Old Password");

        changePassBTN.setBackground(new java.awt.Color(51, 51, 51));
        changePassBTN.setForeground(new java.awt.Color(204, 204, 204));
        changePassBTN.setText("Change Password");
        changePassBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changePassBTNActionPerformed(evt);
            }
        });

        cancelBTN.setBackground(new java.awt.Color(51, 51, 51));
        cancelBTN.setForeground(new java.awt.Color(204, 204, 204));
        cancelBTN.setText("Cancel");
        cancelBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBTNActionPerformed(evt);
            }
        });

        newPassLBL.setForeground(new java.awt.Color(153, 153, 153));
        newPassLBL.setText("New Password");

        jSeparator2.setBackground(new java.awt.Color(255, 255, 255));
        jSeparator2.setVerifyInputWhenFocusTarget(false);

        renewPassLBL.setForeground(new java.awt.Color(153, 153, 153));
        renewPassLBL.setText("Re-type New Password");

        jSeparator5.setBackground(new java.awt.Color(255, 255, 255));
        jSeparator5.setVerifyInputWhenFocusTarget(false);

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, userDatList, jUserTable);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${userID}"));
        columnBinding.setColumnName("User ID");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${usernick}"));
        columnBinding.setColumnName("Usernick");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${userpass}"));
        columnBinding.setColumnName("Userpass");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${userfname}"));
        columnBinding.setColumnName("Userfname");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${userlname}"));
        columnBinding.setColumnName("Userlname");
        columnBinding.setColumnClass(String.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        jScrollPane1.setViewportView(jUserTable);
        if (jUserTable.getColumnModel().getColumnCount() > 0) {
            jUserTable.getColumnModel().getColumn(0).setMinWidth(0);
            jUserTable.getColumnModel().getColumn(0).setPreferredWidth(0);
            jUserTable.getColumnModel().getColumn(0).setMaxWidth(0);
            jUserTable.getColumnModel().getColumn(1).setMinWidth(0);
            jUserTable.getColumnModel().getColumn(1).setPreferredWidth(0);
            jUserTable.getColumnModel().getColumn(1).setMaxWidth(0);
            jUserTable.getColumnModel().getColumn(2).setMinWidth(0);
            jUserTable.getColumnModel().getColumn(2).setPreferredWidth(0);
            jUserTable.getColumnModel().getColumn(2).setMaxWidth(0);
            jUserTable.getColumnModel().getColumn(3).setMinWidth(0);
            jUserTable.getColumnModel().getColumn(3).setPreferredWidth(0);
            jUserTable.getColumnModel().getColumn(3).setMaxWidth(0);
            jUserTable.getColumnModel().getColumn(4).setMinWidth(0);
            jUserTable.getColumnModel().getColumn(4).setPreferredWidth(0);
            jUserTable.getColumnModel().getColumn(4).setMaxWidth(0);
        }

        newPassTXT.setBackground(new java.awt.Color(102, 102, 102));
        newPassTXT.setForeground(new java.awt.Color(255, 255, 255));
        newPassTXT.setBorder(null);
        newPassTXT.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                newPassTXTFocusGained(evt);
            }
        });

        renewPassTXT.setBackground(new java.awt.Color(102, 102, 102));
        renewPassTXT.setForeground(new java.awt.Color(255, 255, 255));
        renewPassTXT.setBorder(null);
        renewPassTXT.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                renewPassTXTFocusGained(evt);
            }
        });

        oldPassTXT.setBackground(new java.awt.Color(102, 102, 102));
        oldPassTXT.setForeground(new java.awt.Color(255, 255, 255));
        oldPassTXT.setBorder(null);
        oldPassTXT.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                oldPassTXTFocusGained(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(69, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(oldPassLBL)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jSeparator1)
                            .addComponent(cancelBTN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(changePassBTN, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 355, Short.MAX_VALUE)
                            .addComponent(oldPassTXT, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jSeparator2)
                            .addComponent(jSeparator5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 355, Short.MAX_VALUE)
                            .addComponent(newPassLBL)
                            .addComponent(newPassTXT, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addComponent(renewPassLBL)
                    .addComponent(renewPassTXT, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(56, 56, 56))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(newPassLBL)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(newPassTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(renewPassLBL)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(renewPassTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(oldPassLBL)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(oldPassTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(changePassBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cancelBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(35, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 420, Short.MAX_VALUE)
        );

        bindingGroup.bind();

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cancelBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBTNActionPerformed
        SettingsGUI show = new SettingsGUI();
        show.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_cancelBTNActionPerformed

    private void changePassBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changePassBTNActionPerformed
        if (newPassTXT.getText().equals(renewPassTXT.getText()) && !oldPassTXT.getText().isEmpty()) {
            System.out.println("nothing empty, new & renew match");

            if (oldPassTXT.getText().equals(currentuser.getUserpass())) {
                System.out.println("old pass equals to current user");

                if (newPassTXT.getText().length() < 6) {
                    System.out.println("Password too short");
                    UserMessage5GUI show5 = new UserMessage5GUI();
                    show5.setLocationRelativeTo(null);
                    show5.setVisible(true);
                } else {
                    System.out.println("everything looking good");
                    UserDat users = new UserDat();
                    users.setUserID((Integer) returnUserID());
                    users.setUserfname(currentuser.getFname());
                    users.setUserlname(currentuser.getLname());
                    users.setUsernick(currentuser.getUsername());
                    users.setUserpass(newPassTXT.getText());

                    //EMF
                    EntityManagerFactory emf = Persistence.createEntityManagerFactory("jdbc:derby:QuinDatabase;create=truePU");
                    //JPA
                    UserDatJpaController jpa = new UserDatJpaController(emf);
                    try {
                        jpa.edit(users);
                    } catch (Exception ex) {
                        Logger.getLogger(SettingsGUI.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    refreshList();

                    //reset new pass globally
                    currentuser.setUserpass(newPassTXT.getText());

                    SettingsGUI show = new SettingsGUI();
                    show.setVisible(true);
                    show.setLocationRelativeTo(null);
                    this.setVisible(false);
                }
            } else {
                System.out.println("nope, old pass is wrong");
                UserMessage8GUI show8 = new UserMessage8GUI();
                show8.setLocationRelativeTo(null);
                show8.setVisible(true);
            }
        } else {
            System.out.println("nope, new & renew dont match or old pass field empty");
            UserMessage9GUI show9 = new UserMessage9GUI();
            show9.setLocationRelativeTo(null);
            show9.setVisible(true);
        }

    }//GEN-LAST:event_changePassBTNActionPerformed

    private void newPassTXTFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_newPassTXTFocusGained
        //Gain Label Focus When Clicked
        newPassLBL.setForeground(new Color(255, 255, 255));
        //Default Label Focus
        renewPassLBL.setForeground(new Color(153, 153, 153));
        oldPassLBL.setForeground(new Color(153, 153, 153));

        //set Caret Color
        newPassTXT.setCaretColor(Color.WHITE);
    }//GEN-LAST:event_newPassTXTFocusGained

    private void renewPassTXTFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_renewPassTXTFocusGained
        //Gain Label Focus When Clicked
        renewPassLBL.setForeground(new Color(255, 255, 255));
        //Default Label Focus
        oldPassLBL.setForeground(new Color(153, 153, 153));
        newPassLBL.setForeground(new Color(153, 153, 153));

        //set Caret Color
        renewPassTXT.setCaretColor(Color.WHITE);
    }//GEN-LAST:event_renewPassTXTFocusGained

    private void oldPassTXTFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_oldPassTXTFocusGained
        //Gain Label Focus When Clicked
        oldPassLBL.setForeground(new Color(255, 255, 255));
        //Default Label Focus
        renewPassLBL.setForeground(new Color(153, 153, 153));
        newPassLBL.setForeground(new Color(153, 153, 153));

        //set Caret Color
        oldPassTXT.setCaretColor(Color.WHITE);
    }//GEN-LAST:event_oldPassTXTFocusGained

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PassChangeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PassChangeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PassChangeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PassChangeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PassChangeGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelBTN;
    private javax.swing.JButton changePassBTN;
    private javax.persistence.EntityManager entityManager;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JTable jUserTable;
    private javax.swing.JLabel newPassLBL;
    private javax.swing.JPasswordField newPassTXT;
    private javax.swing.JLabel oldPassLBL;
    private javax.swing.JPasswordField oldPassTXT;
    private javax.swing.JLabel renewPassLBL;
    private javax.swing.JPasswordField renewPassTXT;
    private java.util.List<quincrm.UserDat> userDatList;
    private javax.persistence.Query userDatQuery;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    public Object returnUserID() {
        Object uID = jUserTable.getValueAt(0, 0);
        //return value for calling method
        return uID;
    }

    public void refreshList() {
        userDatList.clear();
        userDatList.addAll(userDatQuery.getResultList());
        System.out.println(userDatList);
        //repaint jTable
        jUserTable.repaint();
    }
}
