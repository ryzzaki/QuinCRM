/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package quincrm;

import java.awt.Color;
import java.io.File;
import java.io.IOException;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import quincrm.exceptions.NonexistentEntityException;
import org.apache.commons.io.FileUtils;

/**
 *
 * @author cuong
 */
public class DelAccGUI extends javax.swing.JFrame {

    //class
    CurrentUser currentUser = new CurrentUser();

    /**
     * Creates new form DelAccGUI
     */
    public DelAccGUI() {
        initComponents();
        generatedCapLBL.setText(captchaGenerator());
        String username = currentUser.getUsername();
        userDatQuery = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT u FROM UserDat u WHERE u.usernick = '" + username + "'");
        refreshList();
        //SELECT THE FIRST ENTRY AFTER THE FILTRATION
        jUserTable.setRowSelectionInterval(0, 0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        entityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("jdbc:derby:QuinDatabase;create=truePU").createEntityManager();
        userDatQuery = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT u FROM UserDat u");
        userDatList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : userDatQuery.getResultList();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        confirmPassLBL = new javax.swing.JLabel();
        delAccBTN = new javax.swing.JButton();
        cancelBTN = new javax.swing.JButton();
        currentPassLBL = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();
        currentPassTXT = new javax.swing.JPasswordField();
        confirmPassTXT = new javax.swing.JPasswordField();
        captchaLBL = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        captchaTXT = new javax.swing.JTextField();
        generatedCapLBL = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jUserTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));
        jPanel1.setPreferredSize(new java.awt.Dimension(270, 266));

        jLabel3.setFont(new java.awt.Font("Century Gothic", 0, 22)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(204, 204, 204));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Management");
        jLabel3.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jSeparator3.setBackground(new java.awt.Color(255, 255, 255));

        jSeparator4.setBackground(new java.awt.Color(255, 255, 255));

        jLabel4.setFont(new java.awt.Font("Century Gothic", 0, 30)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(204, 204, 204));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Account");
        jLabel4.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(160, 160, 160)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jLabel3)
                .addGap(6, 6, 6)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel2.setBackground(new java.awt.Color(102, 102, 102));
        jPanel2.setPreferredSize(new java.awt.Dimension(480, 450));

        jSeparator1.setBackground(new java.awt.Color(255, 255, 255));
        jSeparator1.setVerifyInputWhenFocusTarget(false);

        confirmPassLBL.setForeground(new java.awt.Color(153, 153, 153));
        confirmPassLBL.setText("Confirm Password");

        delAccBTN.setBackground(new java.awt.Color(51, 51, 51));
        delAccBTN.setForeground(new java.awt.Color(204, 204, 204));
        delAccBTN.setText("Delete Account");
        delAccBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delAccBTNActionPerformed(evt);
            }
        });

        cancelBTN.setBackground(new java.awt.Color(51, 51, 51));
        cancelBTN.setForeground(new java.awt.Color(204, 204, 204));
        cancelBTN.setText("Cancel");
        cancelBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBTNActionPerformed(evt);
            }
        });

        currentPassLBL.setForeground(new java.awt.Color(153, 153, 153));
        currentPassLBL.setText("Current Password");

        jSeparator5.setBackground(new java.awt.Color(255, 255, 255));
        jSeparator5.setVerifyInputWhenFocusTarget(false);

        currentPassTXT.setBackground(new java.awt.Color(102, 102, 102));
        currentPassTXT.setForeground(new java.awt.Color(255, 255, 255));
        currentPassTXT.setBorder(null);
        currentPassTXT.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                currentPassTXTFocusGained(evt);
            }
        });

        confirmPassTXT.setBackground(new java.awt.Color(102, 102, 102));
        confirmPassTXT.setForeground(new java.awt.Color(255, 255, 255));
        confirmPassTXT.setBorder(null);
        confirmPassTXT.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                confirmPassTXTFocusGained(evt);
            }
        });

        captchaLBL.setForeground(new java.awt.Color(153, 153, 153));
        captchaLBL.setText("Captcha");

        jSeparator2.setBackground(new java.awt.Color(255, 255, 255));
        jSeparator2.setVerifyInputWhenFocusTarget(false);

        captchaTXT.setBackground(new java.awt.Color(102, 102, 102));
        captchaTXT.setForeground(new java.awt.Color(255, 255, 255));
        captchaTXT.setBorder(null);
        captchaTXT.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                captchaTXTFocusGained(evt);
            }
        });

        generatedCapLBL.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        generatedCapLBL.setForeground(new java.awt.Color(255, 255, 255));
        generatedCapLBL.setText("[captcha]");

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, userDatList, jUserTable);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${userID}"));
        columnBinding.setColumnName("User ID");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${usernick}"));
        columnBinding.setColumnName("Usernick");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${userpass}"));
        columnBinding.setColumnName("Userpass");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${userfname}"));
        columnBinding.setColumnName("Userfname");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${userlname}"));
        columnBinding.setColumnName("Userlname");
        columnBinding.setColumnClass(String.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();

        jScrollPane2.setViewportView(jUserTable);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(currentPassLBL))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(currentPassTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(confirmPassLBL))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(confirmPassTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(delAccBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(cancelBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(captchaLBL)
                                    .addComponent(generatedCapLBL, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(captchaTXT))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(56, 56, 56))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(currentPassLBL)
                .addGap(6, 6, 6)
                .addComponent(currentPassTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(confirmPassLBL)
                .addGap(6, 6, 6)
                .addComponent(confirmPassTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(captchaLBL)
                .addGap(6, 6, 6)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(generatedCapLBL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(captchaTXT, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE))
                .addGap(6, 6, 6)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(delAccBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(cancelBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 420, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 420, Short.MAX_VALUE)
        );

        bindingGroup.bind();

        setSize(new java.awt.Dimension(766, 459));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void delAccBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delAccBTNActionPerformed
        if (currentPassTXT.getText().equals(currentUser.getUserpass()) && currentPassTXT.getText().equals(confirmPassTXT.getText()) && generatedCapLBL.getText().equals(captchaTXT.getText())) {
            System.out.println("Everything looking good");

            //ACCOUNT DELETE
            EntityManagerFactory emf = Persistence.createEntityManagerFactory("jdbc:derby:QuinDatabase;create=truePU");
            UserDatJpaController jpa = new UserDatJpaController(emf);

            try {
                jpa.destroy((Integer) returnUser());
            } catch (NonexistentEntityException ex) {
                Logger.getLogger(jTableCheckMasterGUI.class.getName()).log(Level.SEVERE, null, ex);
            }

            refreshList();
            InitialGUI show = new InitialGUI();
            show.setVisible(true);
            show.setLocationRelativeTo(null);
            this.setVisible(false);

            //DELETE USER FOLDER
            File userDir = new File(currentUser.getUserPC() + "\\Documents\\QuinCRM\\" + currentUser.getUsername());
            try {
                FileUtils.deleteDirectory(userDir);
            } catch (IOException ex) {
                Logger.getLogger(DelAccGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            System.out.println("User folder " + userDir + " has been deleted");
            System.out.println("User '" + currentUser.getUsername() + "'" + " has been deleted successfully");

            //SHOW USER MESSAGE
            UserMessage10GUI show10 = new UserMessage10GUI();
            show10.setLocationRelativeTo(null);
            show10.setVisible(true);
        } else {
            System.out.println("Pass incorrect or not confirmed or captcha");
            UserMessage7GUI show7 = new UserMessage7GUI();
            show7.setLocationRelativeTo(null);
            show7.setVisible(true);
            generatedCapLBL.setText(captchaGenerator());
        }
    }//GEN-LAST:event_delAccBTNActionPerformed

    private void cancelBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBTNActionPerformed
        SettingsGUI show = new SettingsGUI();
        show.setVisible(true);
        show.setLocationRelativeTo(null);
        this.setVisible(false);
    }//GEN-LAST:event_cancelBTNActionPerformed

    private void currentPassTXTFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_currentPassTXTFocusGained
        //Gain Label Focus When Clicked
        currentPassLBL.setForeground(new Color(255, 255, 255));
        //Default Label Focus
        confirmPassLBL.setForeground(new Color(153, 153, 153));
        captchaLBL.setForeground(new Color(153, 153, 153));

        //set Caret Color
        currentPassTXT.setCaretColor(Color.WHITE);
    }//GEN-LAST:event_currentPassTXTFocusGained

    private void confirmPassTXTFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_confirmPassTXTFocusGained
        //Gain Label Focus When Clicked
        confirmPassLBL.setForeground(new Color(255, 255, 255));
        //Default Label Focus
        currentPassLBL.setForeground(new Color(153, 153, 153));
        captchaLBL.setForeground(new Color(153, 153, 153));

        //set Caret Color
        confirmPassTXT.setCaretColor(Color.WHITE);
    }//GEN-LAST:event_confirmPassTXTFocusGained

    private void captchaTXTFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_captchaTXTFocusGained
        //Gain Label Focus When Clicked
        captchaLBL.setForeground(new Color(255, 255, 255));
        //Default Label Focus
        confirmPassLBL.setForeground(new Color(153, 153, 153));
        currentPassLBL.setForeground(new Color(153, 153, 153));

        //set Caret Color
        captchaTXT.setCaretColor(Color.WHITE);
    }//GEN-LAST:event_captchaTXTFocusGained

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DelAccGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DelAccGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DelAccGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DelAccGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DelAccGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelBTN;
    private javax.swing.JLabel captchaLBL;
    private javax.swing.JTextField captchaTXT;
    private javax.swing.JLabel confirmPassLBL;
    private javax.swing.JPasswordField confirmPassTXT;
    private javax.swing.JLabel currentPassLBL;
    private javax.swing.JPasswordField currentPassTXT;
    private javax.swing.JButton delAccBTN;
    private javax.persistence.EntityManager entityManager;
    private javax.swing.JLabel generatedCapLBL;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JTable jUserTable;
    private java.util.List<quincrm.UserDat> userDatList;
    private javax.persistence.Query userDatQuery;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    public static String captchaGenerator() {
        Random randomizer = new Random();
        StringBuilder builder = new StringBuilder();
        for (int i = 0; i < 5; i++) {
            builder.append((char) (97 + randomizer.nextInt(25)));
            builder.append((char) (65 + randomizer.nextInt(25)));
        }
        return builder.toString();
    }

    public Object returnUser() {
        //Test in output
        System.out.println(0);
        Object Task = jUserTable.getValueAt(0, 0);
        //return value for calling method
        return Task;
    }

    public void refreshList() {
        userDatList.clear();
        userDatList.addAll(userDatQuery.getResultList());
        System.out.println(userDatList);
        //repaint jTable
        jUserTable.repaint();
    }
}
