/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package quincrm;

import java.awt.Color;
import java.awt.event.KeyEvent;
import java.io.File;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;

/**
 *
 * @author cuong
 */
public class RegisterGUI extends javax.swing.JFrame {

    /**
     * Creates new form RegisterGUI
     */
    public RegisterGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        entityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("jdbc:derby:QuinDatabase;create=truePU").createEntityManager();
        userDatQuery = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT u FROM UserDat u");
        userDatList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : userDatQuery.getResultList();
        jPanel1 = new javax.swing.JPanel();
        fnameLBL = new javax.swing.JLabel();
        fnameTXT = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        lnameLBL = new javax.swing.JLabel();
        lnameTXT = new javax.swing.JTextField();
        jSeparator4 = new javax.swing.JSeparator();
        usernameLBL = new javax.swing.JLabel();
        usernameTXT = new javax.swing.JTextField();
        jSeparator5 = new javax.swing.JSeparator();
        passwordLBL = new javax.swing.JLabel();
        passwordTXT = new javax.swing.JPasswordField();
        jSeparator7 = new javax.swing.JSeparator();
        repasswordLBL = new javax.swing.JLabel();
        repasswordTXT = new javax.swing.JPasswordField();
        registerBTN = new javax.swing.JButton();
        jSeparator8 = new javax.swing.JSeparator();
        backBTN = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        loginLBL = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator6 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));
        jPanel1.setPreferredSize(new java.awt.Dimension(500, 370));

        fnameLBL.setForeground(new java.awt.Color(102, 102, 102));
        fnameLBL.setText("First Name");

        fnameTXT.setBackground(new java.awt.Color(51, 51, 51));
        fnameTXT.setForeground(new java.awt.Color(204, 204, 204));
        fnameTXT.setBorder(null);
        fnameTXT.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                fnameTXTFocusGained(evt);
            }
        });
        fnameTXT.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                fnameTXTKeyPressed(evt);
            }
        });

        jSeparator2.setBackground(new java.awt.Color(255, 255, 255));

        lnameLBL.setForeground(new java.awt.Color(102, 102, 102));
        lnameLBL.setText("Last Name");

        lnameTXT.setBackground(new java.awt.Color(51, 51, 51));
        lnameTXT.setForeground(new java.awt.Color(204, 204, 204));
        lnameTXT.setBorder(null);
        lnameTXT.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                lnameTXTFocusGained(evt);
            }
        });
        lnameTXT.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                lnameTXTKeyPressed(evt);
            }
        });

        jSeparator4.setBackground(new java.awt.Color(255, 255, 255));

        usernameLBL.setForeground(new java.awt.Color(102, 102, 102));
        usernameLBL.setText("Username");

        usernameTXT.setBackground(new java.awt.Color(51, 51, 51));
        usernameTXT.setForeground(new java.awt.Color(204, 204, 204));
        usernameTXT.setBorder(null);
        usernameTXT.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                usernameTXTFocusGained(evt);
            }
        });
        usernameTXT.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                usernameTXTKeyPressed(evt);
            }
        });

        jSeparator5.setBackground(new java.awt.Color(255, 255, 255));

        passwordLBL.setForeground(new java.awt.Color(102, 102, 102));
        passwordLBL.setText("Password");

        passwordTXT.setBackground(new java.awt.Color(51, 51, 51));
        passwordTXT.setForeground(new java.awt.Color(204, 204, 204));
        passwordTXT.setBorder(null);
        passwordTXT.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                passwordTXTFocusGained(evt);
            }
        });
        passwordTXT.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                passwordTXTKeyPressed(evt);
            }
        });

        jSeparator7.setBackground(new java.awt.Color(255, 255, 255));

        repasswordLBL.setForeground(new java.awt.Color(102, 102, 102));
        repasswordLBL.setText("Re-type Password");

        repasswordTXT.setBackground(new java.awt.Color(51, 51, 51));
        repasswordTXT.setForeground(new java.awt.Color(204, 204, 204));
        repasswordTXT.setBorder(null);
        repasswordTXT.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                repasswordTXTFocusGained(evt);
            }
        });
        repasswordTXT.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                repasswordTXTKeyPressed(evt);
            }
        });

        registerBTN.setBackground(new java.awt.Color(51, 51, 51));
        registerBTN.setForeground(new java.awt.Color(204, 204, 204));
        registerBTN.setText("Register");
        registerBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerBTNActionPerformed(evt);
            }
        });

        jSeparator8.setBackground(new java.awt.Color(255, 255, 255));

        backBTN.setBackground(new java.awt.Color(51, 51, 51));
        backBTN.setForeground(new java.awt.Color(204, 204, 204));
        backBTN.setText("Back");
        backBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBTNActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(83, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(repasswordLBL)
                    .addComponent(passwordLBL)
                    .addComponent(usernameLBL)
                    .addComponent(lnameLBL)
                    .addComponent(fnameLBL)
                    .addComponent(fnameTXT)
                    .addComponent(jSeparator2)
                    .addComponent(lnameTXT)
                    .addComponent(jSeparator4)
                    .addComponent(usernameTXT)
                    .addComponent(jSeparator5)
                    .addComponent(passwordTXT, javax.swing.GroupLayout.DEFAULT_SIZE, 355, Short.MAX_VALUE)
                    .addComponent(jSeparator7)
                    .addComponent(repasswordTXT)
                    .addComponent(jSeparator8, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(registerBTN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(backBTN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(62, 62, 62))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(fnameLBL)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fnameTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(lnameLBL)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lnameTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(usernameLBL)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(usernameTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(passwordLBL)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(passwordTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(repasswordLBL)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(repasswordTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(registerBTN)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(backBTN)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(288, 0, -1, 470));

        jPanel2.setBackground(new java.awt.Color(102, 102, 102));

        loginLBL.setFont(new java.awt.Font("Century Gothic", 0, 56)); // NOI18N
        loginLBL.setForeground(new java.awt.Color(204, 204, 204));
        loginLBL.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        loginLBL.setText("REGISTER");
        loginLBL.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jSeparator3.setBackground(new java.awt.Color(255, 255, 255));

        jSeparator6.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(loginLBL, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator3)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(184, Short.MAX_VALUE)
                .addComponent(loginLBL)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(152, 152, 152))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 290, 470));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fnameTXTFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fnameTXTFocusGained
        //Gain Label Focus When Clicked
        fnameLBL.setForeground(new Color(204, 204, 204));
        lnameLBL.setForeground(new Color(102, 102, 102));
        usernameLBL.setForeground(new Color(102, 102, 102));
        passwordLBL.setForeground(new Color(102, 102, 102));
        repasswordLBL.setForeground(new Color(102, 102, 102));

        //set Caret Color
        fnameTXT.setCaretColor(Color.WHITE);
    }//GEN-LAST:event_fnameTXTFocusGained

    private void lnameTXTFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_lnameTXTFocusGained
        //Gain Label Focus When Clicked
        lnameLBL.setForeground(new Color(204, 204, 204));
        fnameLBL.setForeground(new Color(102, 102, 102));
        usernameLBL.setForeground(new Color(102, 102, 102));
        passwordLBL.setForeground(new Color(102, 102, 102));
        repasswordLBL.setForeground(new Color(102, 102, 102));

        //set Caret Color
        lnameTXT.setCaretColor(Color.WHITE);
    }//GEN-LAST:event_lnameTXTFocusGained

    private void usernameTXTFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_usernameTXTFocusGained
        //Gain Label Focus When Clicked
        usernameLBL.setForeground(new Color(204, 204, 204));
        fnameLBL.setForeground(new Color(102, 102, 102));
        lnameLBL.setForeground(new Color(102, 102, 102));
        passwordLBL.setForeground(new Color(102, 102, 102));
        repasswordLBL.setForeground(new Color(102, 102, 102));

        //set Caret Color
        usernameTXT.setCaretColor(Color.WHITE);
    }//GEN-LAST:event_usernameTXTFocusGained

    private void passwordTXTFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_passwordTXTFocusGained
        //Gain Label Focus When Clicked
        passwordLBL.setForeground(new Color(204, 204, 204));
        fnameLBL.setForeground(new Color(102, 102, 102));
        lnameLBL.setForeground(new Color(102, 102, 102));
        usernameLBL.setForeground(new Color(102, 102, 102));
        repasswordLBL.setForeground(new Color(102, 102, 102));

        //set Caret Color
        passwordTXT.setCaretColor(Color.WHITE);
    }//GEN-LAST:event_passwordTXTFocusGained

    private void repasswordTXTFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_repasswordTXTFocusGained
        //Gain Label Focus When Clicked
        repasswordLBL.setForeground(new Color(204, 204, 204));
        fnameLBL.setForeground(new Color(102, 102, 102));
        lnameLBL.setForeground(new Color(102, 102, 102));
        usernameLBL.setForeground(new Color(102, 102, 102));
        passwordLBL.setForeground(new Color(102, 102, 102));

        //set Caret Color
        repasswordTXT.setCaretColor(Color.WHITE);
    }//GEN-LAST:event_repasswordTXTFocusGained

    private void registerBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerBTNActionPerformed
        //Empty fields
        if (fnameTXT.getText().isEmpty() || lnameTXT.getText().isEmpty() || usernameTXT.getText().isEmpty()
                || passwordTXT.getText().isEmpty() || repasswordTXT.getText().isEmpty()) {
            System.out.println("Something is empty");
            UserMessage2GUI show2 = new UserMessage2GUI();
            show2.setLocationRelativeTo(null);
            show2.setVisible(true);
        } //Pass not matching
        else if (!passwordTXT.getText().equals(repasswordTXT.getText())) {
            System.out.println("Passwords are not matching");
            UserMessage3GUI show3 = new UserMessage3GUI();
            show3.setLocationRelativeTo(null);
            show3.setVisible(true);
        } //Username exists
        else if (userExistence() > 0) {
            System.out.println("Username exists");
            UserMessage4GUI show4 = new UserMessage4GUI();
            show4.setLocationRelativeTo(null);
            show4.setVisible(true);
        } //Passwords are matching
        else if (passwordTXT.getText().equals(repasswordTXT.getText())) {
            if (passwordTXT.getText().length() < 6) {
                System.out.println("Password too short");
                UserMessage5GUI show5 = new UserMessage5GUI();
                show5.setLocationRelativeTo(null);
                show5.setVisible(true);
            } else {
                //Successful register
                UserDat users = new UserDat();
                users.setUserfname(fnameTXT.getText());
                users.setUserlname(lnameTXT.getText());
                users.setUsernick(usernameTXT.getText().toLowerCase());
                users.setUserpass(passwordTXT.getText());

                //EMF
                EntityManagerFactory emf = Persistence.createEntityManagerFactory("jdbc:derby:QuinDatabase;create=truePU");
                //JPA
                UserDatJpaController jpa = new UserDatJpaController(emf);
                jpa.create(users);

                System.out.println("User CREATED");
                //Create the User Directory
                String loggeduser = System.getenv("USERPROFILE");
                File logsDirectory = new File(loggeduser + "\\Documents\\QuinCRM\\" + usernameTXT.getText() + "\\Logs");
                File graphsDirectory = new File(loggeduser + "\\Documents\\QuinCRM\\" + usernameTXT.getText() + "\\Graphs");
                logsDirectory.mkdirs();
                graphsDirectory.mkdirs();

                System.out.println("Folder CREATED in " + loggeduser + "\\Documents\\QuinCRM\\" + usernameTXT.getText());

                UserMessage1GUI show1 = new UserMessage1GUI();
                show1.setLocationRelativeTo(null);
                show1.setVisible(true);

                fnameTXT.setText("");
                lnameTXT.setText("");
                usernameTXT.setText("");
                passwordTXT.setText("");
                repasswordTXT.setText("");
            }
        }

    }//GEN-LAST:event_registerBTNActionPerformed

    private void backBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBTNActionPerformed
        InitialGUI show = new InitialGUI();
        show.setVisible(true);
        show.setLocationRelativeTo(null);
        this.setVisible(false);
    }//GEN-LAST:event_backBTNActionPerformed

    private void repasswordTXTKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_repasswordTXTKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            registerBTN.doClick();
        }
    }//GEN-LAST:event_repasswordTXTKeyPressed

    private void passwordTXTKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passwordTXTKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            registerBTN.doClick();
        }
    }//GEN-LAST:event_passwordTXTKeyPressed

    private void usernameTXTKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_usernameTXTKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            registerBTN.doClick();
        }
    }//GEN-LAST:event_usernameTXTKeyPressed

    private void lnameTXTKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lnameTXTKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            registerBTN.doClick();
        }
    }//GEN-LAST:event_lnameTXTKeyPressed

    private void fnameTXTKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fnameTXTKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            registerBTN.doClick();
        }
    }//GEN-LAST:event_fnameTXTKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegisterGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegisterGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegisterGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegisterGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegisterGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBTN;
    private javax.persistence.EntityManager entityManager;
    private javax.swing.JLabel fnameLBL;
    private javax.swing.JTextField fnameTXT;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JLabel lnameLBL;
    private javax.swing.JTextField lnameTXT;
    private javax.swing.JLabel loginLBL;
    private javax.swing.JLabel passwordLBL;
    private javax.swing.JPasswordField passwordTXT;
    private javax.swing.JButton registerBTN;
    private javax.swing.JLabel repasswordLBL;
    private javax.swing.JPasswordField repasswordTXT;
    private java.util.List<quincrm.UserDat> userDatList;
    private javax.persistence.Query userDatQuery;
    private javax.swing.JLabel usernameLBL;
    private javax.swing.JTextField usernameTXT;
    // End of variables declaration//GEN-END:variables

    public int userExistence() {
        String username = usernameTXT.getText().toLowerCase();
        userDatList.clear();
        userDatQuery = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT u FROM UserDat u WHERE u.usernick LIKE '" + username + "'");
        userDatList.addAll(userDatQuery.getResultList());
        int size = userDatList.size();
        return size;
    }

}
